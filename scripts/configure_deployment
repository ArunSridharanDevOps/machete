#!/bin/bash -l
set -eo pipefail

__parse_arguments() {
  number_of_arguments=$#
  mode=${1:-''}
}

__check_usage() {
  if [ ${number_of_arguments} -ne 1 ] || ([ $mode != "online" ] && [ $mode != "offline" ]); then
    echo "Usage:"
    echo "  $0 online|offline"
    exit 1
  fi
}

__target_api() {
  if [ $mode = "online" ]; then
      cf api api.10.244.0.34.xip.io --skip-ssl-validation
  else
      cf api api.10.244.1.34.xip.io --skip-ssl-validation
  fi

  cf login -u admin -p admin -o pivotal -s integration
}

__ensure_space() {
  cf create-org pivotal
  cf create-space integration -o pivotal
  cf target -o pivotal -s integration
}

__reset_postgres_security_groups() {
  cf delete-security-group postgres-access -f
  cf create-security-group postgres-access "./scripts/assets/${mode}_postgres_security_group.json"
  cf bind-security-group postgres-access pivotal integration
}

__ensure_firewall_for_offline() {
  if [ $mode = "offline" ]; then
    bundle
    VAGRANT_CWD=$HOME/workspace/bosh-lite-2nd-instance bundle exec ./scripts/enable_bosh_enterprise_firewall.rb
  fi
}

__create_database_users() {
  postgres_path_command="postgres_path=\`find /var/vcap/data/packages/postgres/*/ -name bin\`"
  change_path_command="PATH=\$postgres_path:\$PATH"
  create_machete_user_command="psql -h 0.0.0.0 -U vcap -p 5524 -d postgres -c \"create user machete with encrypted password 'machete' SUPERUSER\""
  create_buildpacks_user_command="psql -h 0.0.0.0 -U vcap -p 5524 -d postgres -c \"create user buildpacks with encrypted password 'buildpacks'\""
  bosh ssh --gateway_user vcap postgres_z1 0 --default_password p "$postgres_path_command;$change_path_command;$create_machete_user_command;$create_buildpacks_user_command"
}

__target_bosh() {
  if [ $mode = "online" ]; then
    cd $HOME/workspace/bosh-lite
    bosh target 192.168.50.4
  else
    cd $HOME/workspace/bosh-lite-2nd-instance
    bosh target 192.168.100.4
  fi

  bosh login admin admin
}

__parse_arguments $@
__check_usage
__target_api
__ensure_space
__reset_postgres_security_groups

__ensure_firewall_for_offline

__target_bosh
__create_database_users
